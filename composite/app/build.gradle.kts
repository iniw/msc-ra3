/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation(libs.junit.jupiter)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.register<JavaExec>("pgarquivo") {
    group = "application"
    description = "Executa o item pgarquivo (dado como referência)"
    mainClass.set("composite.pgarquivo.Teste")
    classpath = sourceSets["main"].runtimeClasspath
}

// Custom task for the second application
tasks.register<JavaExec>("categoria") {
    group = "application"
    description = "Executa o item 02.1"
    mainClass.set("composite.categoria.Teste")
    classpath = sourceSets["main"].runtimeClasspath
}

tasks.register<JavaExec>("universidade") {
    group = "application"
    description = "Executa o item universidade (dado como referência)"
    mainClass.set("composite.universidade.Teste")
    classpath = sourceSets["main"].runtimeClasspath
}

tasks.register<JavaExec>("portfolio") {
    group = "application"
    description = "Executa o item portfolio (dado como referência)"
    mainClass.set("composite.portfolio.Teste")
    classpath = sourceSets["main"].runtimeClasspath
}
